//========================
包名要和当前文件夹对应。不指定类所在的包时，类处在当前文件夹下的默认包中。


========================
容器：
Map:键值对的集合，键值类型在map声明时确定。
hashmap操作没有实现同步（要自己实现多线程操作），hashtable可以同步操作

Set:集合，不允许有重复的项
获取的方法是遍历，Iterator.next
List:像数组，每个项都有编号（从0开始）

========================
异常：
exception 继承 Throwable:
抛出异常：throw ception{}
异常说明：说明某个方法会抛出异常（程序发布后不会公布代码，在api中可说明。使调用者捕获异常）
捕获异常：try{语句块}catch（exception e）{...}finally{...}

method throws Exception{}

3种类型的异常：
1.checked exception 被程序捕获和处理的异常，程序能够继续执行。
2.error 不是由程序引起，（如：硬件或系统错误），程序不能够继续执行
3.runtime exception 由逻辑错误引起。程序不能够预测到，不能继续执行。

error和runtime exception属于unchecked exception

________________________
捕获异常：
try { return x; } finally { ... } //finally中语句一定会被执行，实际上finally语句编译在try中return之前

========================
线程池：


========================
内部类包括匿名类(anonymous): 

匿名类访问外部类变量必须是final，因为匿名类保存了外部类成员的拷贝，而不是直接访问外部类成员。
如果不是final类型，匿名类执行的结果会很奇怪(外部类成员会变化，而内部类访问的值不变)。


//java8匿名类
lambda表达式

=======================
annotation(注释语言)
注释为程序提供数据，但并不直接影响程序。

Information for the compiler — 编译器使用注释查找编译是的错误或警告
Compile-time and deployment-time processing — 其他工具可以根据注释产生代码或文件(jdoc)
Runtime processing — 一些注释是变量，能够在程序运行时被检查

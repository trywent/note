/*********
 uboot
*/




/*********
 模式
*/

typedef enum {
	CMD_UNDEFINED_MODE=0,
	CMD_POWER_DOWN_DEVICE,
	CMD_NORMAL_MODE,
	CMD_RECOVERY_MODE,
	CMD_FASTBOOT_MODE,
	CMD_ALARM_MODE,
	CMD_CHARGE_MODE,
	CMD_ENGTEST_MODE,
	CMD_WATCHDOG_REBOOT,
	CMD_AP_WATCHDOG_REBOOT,
	CMD_SPECIAL_MODE,
	CMD_UNKNOW_REBOOT_MODE,
	CMD_PANIC_REBOOT,
	CMD_VMM_PANIC_MODE,   //0xd
	CMD_TOS_PANIC_MODE,
	CMD_EXT_RSTN_REBOOT_MODE,
	CMD_CALIBRATION_MODE,
	CMD_FACTORYTEST_MODE,
	CMD_AUTODLOADER_REBOOT,
	CMD_AUTOTEST_MODE,
	CMD_IQ_REBOOT_MODE,
	CMD_SLEEP_MODE,
	CMD_SPRDISK_MODE,
	CMD_APKMMI_MODE,
	CMD_UPT_MODE,

	/*this is not a mode name ,beyond CMD_MAX_MODE means overflow*/
	CMD_MAX_MODE
}
//启动模式检测函数
CBOOT_FUNC s_boot_func_array[CHECK_BOOTMODE_FUN_NUM] = {
	get_mode_from_bat_low,
	write_sysdump_before_boot_extend,
	get_mode_from_miscdata_boot_flag,
	/* 1 get mode from file*/
	get_mode_from_file_extend,
	/* 2 get mode from watch dog*/
	get_mode_from_watchdog,
	/*3 get mode from alarm register*/
	get_mode_from_alarm_register,
	/*0 get mode from calibration detect*/
	get_mode_from_pctool,
	get_mode_from_emmcTimes,
	/*4 get mode from charger*/
	get_mode_from_charger,
	/*5 get mode from keypad*/
	get_mode_from_keypad,
	/*6 get mode from gpio*/
	get_mode_from_gpio_extend,

	/*shutdown device*/
	//get_mode_from_shutdown,
	0
}@ums512_1h10.c

do_cboot(cmd_tbl_t *cmdtp, int flag, int argc, char *const argv[]){
- for (i = 0;  i < CHECK_BOOTMODE_FUN_NUM; i++) {
	- bootmode = s_boot_func_array[i]()
	}
  //启动
- board_boot_mode_regist(boot_mode_array)
- boot_mode_array[bootmode]()
}@cmd_cboot.c


//从校准模式检测是否校准
pctool_mode_detect(void){
- get_mode_from_gpio
- charger_connected@sprd_battery.c
- 
}@calibration_detect.c



bsp/bootloader/u-boot15/board/spreadtrum/ums512_1h10/ums512_1h10.c
bsp/bootloader/u-boot15/drivers/power/battery/sprd_battery.c
bsp/bootloader/u-boot15/common/loader/calibration_detect.c


usb_add_config: interface 0 = gser/000000009f8f2b40
g_serial: ready
usb calibrate configuration timeout,17787,2786,15000
/*********
 lcd mipi驱动接口平台提供
 panel的初始化参数客户提供
*/
//panel驱动信息
static struct panel_cfg supported_panel[] = {
	...
#ifdef CONFIG_LCD_TD4310_TRULY_MIPI_FHD
	{
		.lcd_id = 0x4310,
		.drv = &td4310_truly_driver,
	},
#endif
	{
		.lcd_id = 0xFFFF,
		.drv = &dummy_mipi_driver,
	},
}

//lcd初始化
lcd_ctrl_init(lcdbase/*fb_base 内存*/)@lcd.c-->lcd_ctrl_init{
 sprdfb_probe{
	- sprd_panel_probe	//遍历supported_panel找到对应的设备驱动
	- get_fb_base_from_dt	//dtb获取base addr
	- sprd_dispc_probe	//panel control控制函数初始化
	}
- get_bmp_base_from_dt(&bmp)
- lcd_set_flush_dcache
}@sprd_main.c

//探测显示屏panel设备
prd_panel_probe{
- for (i = 0; i < ARRAY_SIZE(supported_panel); i++) {
	- panel_drv = supported_panel[i].drv
	- info = panel_drv->info
	- ops = panel_drv->ops
	- ops->power(true)
	- if(!ops->read_id())	//探测到设备
		break;	  
	- ops->power(false)	//不是当前驱动，关闭供电，还原初始化
	- panel_if_uinit()
	}  
- ops->init()			//初始化panel
- lcd_id_to_kernel = supported_panel[i].lcd_id
}@sprd_panel.c

//panel control
sprd_dispc_probe(void){
- struct sprd_dispc *dispc = &dispc_device
- dispc->core = dispc_core_ops_attach()
- dispc->clk = dispc_clk_ops_attach()
- dispc->glb = dispc_glb_ops_attach()
- dispc_context_init(dispc)
- sprd_dispc_resume(dispc)
}@sprd_dispc.c



bsp/bootloader/u-boot15/common/lcd.c
bsp/bootloader/u-boot15/drivers/video/sprd/sprd_main.c
bsp/bootloader/u-boot15/drivers/video/sprd/sprd_dispc.c
bsp/bootloader/u-boot15/drivers/video/sprd/sharkl5pro/global_dispc.c
bsp/bootloader/u-boot15/drivers/video/sprd/sprd_panel.c
bsp/bootloader/u-boot15/drivers/video/sprd/lcd/panel_cfg.h

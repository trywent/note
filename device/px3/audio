//hardwaredevice
HAL_MODULE_INFO_SYM-->legacy_audio_module_methods-->legacy_adev_open{
- ladev->device.open_output_stream = adev_open_output_stream
- ladev->device.open_input_stream = adev_open_input_stream
- ladev->hwif = createAudioHardware()-->new AudioHardware()
- 返回ladev->device //audioflinger通过device接口操作
}@audio_hw_hal.cp


hardware/rk29/audio/audio_hw_hal.cp
===============
//output
adev_open_output_stream-->ladev->hwif->openOutputStream@audio_hw_hal.cp-->
openOutputStream-->new AudioStreamOutALSA()@AudioHardware.cpp


//写数据
AudioStreamOutALSA::write{

}



===============
//input
AudioStreamInALSA::setParameters{
- mInSampleRate //设置需要的采样率
- set(mHardware, mDevices, &pFormat, &pChannels) //重新配置
}

adev_open_input_stream-->ladev->hwif->openInputStream@audio_hw_hal.cp-->
openInputStream(uint32_t devices, int *format, uint32_t *channels, uint32_t *sampleRate){
- android::sp <AudioStreamInALSA> in = new AudioStreamInALSA:
	- mSampleRate(AUDIO_HW_IN_SAMPLERATE) //48000
	- mReqSampleRate(AUDIO_HW_IN_SAMPLERATE) //48000
	- mInSampleRate(AUDIO_HW_IN_SAMPLERATE) //48000
	{}
- in->set(this, devices, format, channels, sampleRate, acoustic_flags)-->
	AudioStreamInALSA::set{
	- *pRate = sampleRate() //当前采样率
	- rate= AudioHardware::getInputSampleRate(*pRate) //查找最接近的采样率 8000 --- 48000
	- mReqSampleRate = rate
	- mSampleRate //当前采样率
	- mBufferSize = getBufferSize(mSampleRate)
	- mSampleRate < mInSampleRate{//采样率不匹配
		- mDownSampler = new AudioHardware::DownSampler(mSampleRate,mInSampleRate)
		}
	}
}@AudioHardware.cpp




//读数据
AudioStreamInALSA::read{
- 若standby状态，先open_l()-->AudioStreamInALSA::open_l{
	- route_pcm_open(mHardware->getRouteFromDevice)
	- route_set_controls
	}
- pcm_read
}

hardware/rk29/audio/AudioHardware.cpp
hardware/rk29/audio/alsa_route.c


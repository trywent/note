/*
 
*/

//tinymix -D 1/2/3 查看sprdphone对应的声卡是哪个
tinycap /data/afe_in.wav -D 3 -d 2 -c 2 -r 48000 -p 320 -n 2

echo 6 > /proc/sys/kernel/printk
echo 1 > /proc/sys/kernel/printk
echo 4 > /proc/sys/kernel/printk &
echo -n 1  > /sys/fytver/resetGPS
echo -n 0  > /sys/fytver/resetGPS
//mainmic
/proc/asound/sprdphone/pcm0c/info

//auxmic 默认多媒体mic
/proc/asound/sprdphone/pcm2c/info


adb shell cat /proc/asound/sprdphone/sprd-codec > sprd-codec.txt
adb shell cat /proc/asound/sprdphone/vbc > vbc.txt
adb shell cat /proc/asound/sprdphone/pcm2c/DMA > dma.txt

cat /proc/asound/sprdphone/pcm2c/sub0/hw_params
cat /proc/asound/sprdphone/pcm2c/sub0/sw_params
cat /proc/asound/sprdphone/pcm2c/sub0/status
cat /proc/asound/sprdphone/pcm2c/sub0/info
cat /proc/asound/sprdphone/pcm2c/info

dd if=/storage/USB0/boot.img of=/dev/block/platform/sdio_emmc/by-name/boot bs=1024 count=16384
dd if=/sdcard/boot.img of=/dev/block/platform/sdio_emmc/by-name/boot bs=1024 count=16384

dd if=/sdcard/recovery.img of=/dev/block/platform/sdio_emmc/by-name/recovery bs=1024 count=16426

61      BOOL    1       ADC1-DAC Digital Loop switch             Off
62      BOOL    1       ADC-DAC Digital Loop switch              Off
63      BOOL    1       ADC1-DAC Adie Loop switch                Off
64      BOOL    1       ADC-DAC Adie Loop switch                 Off
tinymix -D 3  61 1
tinymix -D 3 63 1
//查看设备
cat proc/asound/devices

//声卡状态
/proc/asound/card0/pcm0p/sub0
cat hw_params
cat sw_params

//抓取dump
adb root
setprop media.dump.path /data/local/media/ 
setprop media.dump.switch 0x300
//media播放
setprop media.dump.switch 0x3 


//设备
tinymix -D 0

tinymix -D num "SPKL Mixer DACLSPKL Switch" 1 
tinymix -D num "SPKL Mixer DACRSPKL Switch" 1
tinymix -D num "Speaker Function" 1



logcat -s MediaPlayerFyt audio_hw_primary
logcat -s DUMP.DATA
logcat -s audio_hw_primary


//audioDebug apk
setenforce 0


<dumpmusic  num="16"  dump_switch = "0x0" dump_path="/data/local/media/" total_switch="ON">
	<dump_play  index="0" item_name ="music.dump0"  dump_file_name ="dump_music_before_express.pcm"  switch="0" />
	<dump_play  index="1" item_name ="music.dump1"  dump_file_name ="dump_music_before_vbc.pcm"  switch="0" />
	<dump_play  index="2" item_name ="music.dump2"  dump_file_name ="dump_mix_vaudio.pcm"  switch="0" />
	<dump_play  index="3" item_name ="music.dump3"  dump_file_name ="dump_voip_write.pcm"  switch="0" />
	<dump_play  index="4" item_name ="music.dump4"  dump_file_name ="dump_bt_sco_write.pcm"  switch="0" />

	<dump_record index="8" item_name ="record.dump0" dump_file_name ="dump_record_after_vbc.pcm" switch="0" />
	<dump_record index="9" item_name ="record.dump1" dump_file_name ="dump_record_after_express" switch="0" />
</dumpmusic>



===========
16k采样率下。80ms的数据重复。16 x 80=160 x 8=1280 words



channels: 2
rate: 16000 (16000/1)     16000 frames/s
period_size: 320 frame    1280 bytes  20ms
buffer_size: 960 frame    3840 bytes  60ms
boundary: 2013265920      


//
[ 1226.371002] c0 :5  interrupt:0 hw:5655840 new:5656640 pos:320 base:5656320 ptr_base:5655360 fyt1:0 fyt2:1
new_hw_ptr < old_hw_ptr=runtime->status->hw_ptr
(ptr_base + pos)5655360 + 320= 5655680 < 5655840 //why
5656640-960 = 5655680 //新指针增加一个buffer_size 

//DMA
FULL_CHN_PAUSE	  FULL_CHN_REQ	     FULL_CHN_CFG	FULL_CHN_INT

FULL_CHN_SRC_ADDR FULL_CHN_DEST_ADDR FULL_CHN_FRAG_LEN  FULL_CHN_BLK_LEN

FULL_CHN_TRSC_LEN FULL_CHN_TRSF_STEP FULL_CHN_WRAP_PTR  FULL_CHN_WRAP_TO

FULL_CHN_LLIST_PTR FULL_CHN_FRAG_STEP FULL_CHN_SRC_BLK_STEP FULL_CHN_DEST_BLK_STEP

=============
问题：

当前指针应该在数据少的位置chn2
----------   //ch1
-------	     //ch2


当前指针应该在数据多的位置chn2  //原厂在这里判断ch1 cross一次选数据多
----------  //ch1
---
----------  //ch2


当前指针应该在数据少的位置chn2 //原厂在这里判断ch2 cross一次选数据多。。是一个bug
-----------
-------      //ch1循环一次
-----------
--           //ch2循环一次



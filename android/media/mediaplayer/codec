//open MAX兼容解码器




/*extrator

可解析媒体框架支持的各种文件格式的组件
*/
service mediaextractor /system/bin/mediaextractor







/*codec

非安全解码器和软件编码器位于编解码器进程中。
  安全解码器和硬件编码器位于 mediaserver（未变更）中
*/

//media.codec Service
service mediacodec /vendor/bin/hw/android.hardware.media.omx@1.0-service@android.hardware.media.omx@1.0-service.rc-->
main{
//treble
- omxStore = new implementation::OmxStore
- omxStore->registerAsService()
- omx = new implementation::Omx()
- omx->registerAsService()
//非treble
- MediaCodecService::instantiate()
}@main_codecservice.cpp


//加载用户自定义硬件解码，加载软解
new Omx()-->new OMXMaster(){
- 初始化mProcessName
- addVendorPlugin-->addPlugin("libstagefrighthw.so"){
	- dlopen(libname)
	- createOMXPlugin = dlsym("createOMXPlugin")
	- addPlugin(createOMXPlugin()){
		- mPlugins.push_back(plugin)
		- plugin->enumerateComponents //遍历plugin中component
		- mPluginByComponentName.add //保存component
		}
	}
- addPlugin(new SoftOMXPlugin) //加入软解
}OMXMaster.cpp


Omx::allocateNode(name,observer,_hidl_cb/*omxNode*/){
- instance = new OMXNodeInstance
- OMXMaster::makeComponentInstance(name,handle) //获取codec的handle
- instance->setHandle(handle)
- _hidl_cb(toStatus(OK), new TWOmxNode(instance))
}@Omx.cpp


OMXMaster::makeComponentInstance(name){
- index = mPluginByComponentName.indexOfKey(name) 
- plugin = mPluginByComponentName.valueAt(index)//根据name获取pluging(硬解,软解)
- plugin->makeComponentInstance(name,callback,compoment){//创建component(decoder)
	- makeComponentInstance{//硬解
	- 
	}
	- makeComponentInstance{//软解
	- dlopen(libName),创建库名并打开//"libstagefright_soft_"
	- createSoftOMXComponent = dlsym(createSoftOMXComponent) //查找函数
	- codec = createSoftOMXComponent(name,callback,compoment) //创建codec
	- codec->initCheck
	}	
	}
- mPluginByInstance.add(*component, plugin)
}@OMXMaster.cpp

//client
OMXClient::connect{
//treble
- connectTreble-->IOmx::getService(name)
//非treble
- connectLegacy-->getService("media.codec")
}@OMXClient.cpp







frameworks/av/services/mediacodec/main_codecservice.cpp
frameworks/av/media/libstagefright/OMXClient.cpp
frameworks/av/media/libstagefright/omx/1.0/Omx.cpp
frameworks/av/media/libstagefright/omx/OMXMaster.cpp


//hardware中的omx没有使用
hardware/interfaces/media/omx/1.0/IOmx.hal
hardware/interfaces/media/omx/1.0/android.hardware.media.omx@1.0_genc++/gen/android/hardware/media/omx/1.0/OmxAll.cpp

//bootable/recovery/recovery.cpp

主系统通过/cache中文件与recovery传递数据.
工厂复位(Factory reset):主系统写"--wipe_data"到 /cache/recovery/command。并重启

OTA升级：主系统写"--update_package=/cache/some-filename.zip"。并重启进入recovery

prompt_and_wait{

}


main{
- 重新设置输出流
- 若启动命令是"--adbd"，则进入adb，adb_main.(只能通过函数apply_from_adb，重启后进入)
- 加载挂载卷表，load_volume_table
- 获取内外sd卡挂载路径，SetSdcardRootPath
- 确保cache分区被挂载，ensure_path_mounted("/cache/..")
- 获取参数，get_args{//参数以'\n'分隔
	- 从分区misc获取bootloader命令，get_bootloader_message
	- 读取misc中的命令
	- 若没有读取到命令，则从"/cache/recovery/command"读取命令
	- 写入bootloader命令，保证recovery执行没有完成，系统重启还进入recovery。(finish_recovery会清除命令)
		set_bootloader_message
	}
- 根据参数表OPTIONS，处理传入的参数，getopt_long
......
- 升级命令update_package
- sd卡升级auto_sdcard_update_path，
- 擦除数据wipe_data
}@recovery.cpp

_____________________
rk MISC:
bootcmd:偏移0x4000

struct bootloader_message {
    char command[32];   //命令 boot-recovery
    char status[32];
    char recovery[768]; //recovery的命令。recovery--wipe_all
    char stage[32];
    char reserved[224];
};

=====================
文件系统挂载表：
load_volume_table{
- 若是emmc，fs_mgr_read_fstab("/etc/recovery.emmc.fstab")
- 否则，fs_mgr_read_fstab("/etc/recovery.fstab")
}@roots.cpp


bootable/recovery/roots.cpp





将apk打包成镜像文件

可能修改：
//加入一个新的Volume到fstab中
fs_mgr_add_entry@roots.cpp



/*
 android4.4 UI
*/

main{
- Device* device = make_device()-->ui(new DefaultUI)-->ScreenRecoveryUI
- ui = device->GetUI()
- ui->init()
- ui->SetLocale(locale)
}@recovery.cpp

ScreenRecoveryUI{
- currentIcon(NONE)
- installingFrame(0)
 //初始化进度条
- progress(0)
 //初始化text,初始化菜单
- text_cols(0)
- show_text(false)
- show_menu(false)
 //资源?
- animation_fps(20)
}@screen_ui.cpp

init{
- gr_init()
  //初始化字体大小
- gr_font_size(&char_width, &char_height)
- text_cols = gr_fb_width() / char_width
  //加载资源图片
- LoadBitmap("icon_installing", &backgroundIcon[INSTALLING_UPDATE])
  ...
- pthread_create(&progress_t, NULL, progress_thread)
  //处理输入事件
- RecoveryUI::Init(){
	- ev_init(input_callback)
	- pthread_create(&input_t, NULL, input_thread)
	}
}@screen_ui.cpp

//设置背景：是否显示字符：输出字符：
ScreenRecoveryUI::SetBackground
ScreenRecoveryUI::ShowText
ScreenRecoveryUI::Print

//graphic
gr_init{
- gglInit(&gr_context)
- GGLContext *gl = gr_context
  //字体
- gr_init_font
  //获取fb信息,buffer
- get_framebuffer(gr_framebuffer)
}@graphics.c


bootable/recovery/ui.h
bootable/recovery/ui.cpp
bootable/recovery/screen_ui.cpp
bootable/recovery/default_device.cpp
bootable/recovery/minui/graphics.c
include/pixelflinger/pixelflinger.h
system/core/libpixelflinger
=====================
RKUPDATE:
sdtool_main-->install_rkimage

=====================
update:

install_package-->really_install_package{
- load_keys{//加载/res/keys
	- cert.key_type //类型KEY_TYPE_RSA
	- cert.hash_len
	} 
- verify_file-->RSA_verify
- try_update_binary{
	- 查找升级包中升级文件，mzFindZipEntry("update-binary")
	- 将文件解压到"/tmp/update_binary"
	- 执行升级文件exec(update_binary,path/*包路径*/)
	}
}@install.cpp-->


bootable/recovery/install.cpp


=====================
ota：
make otapackage-->ota_from_target_files BUILT_TARGET_FILES_PACKAGE(源文件) zip(目标)


ota_from_target_files
--downgrade@Makefile

build-recoveryimage-target@Makefile



WriteFullOTAPackage@ota_from_target_files-->AssertOlderBuild-->
script.AssertOlderBuild(ts, ts_text)@edify_generator.py


build/core/Makefile
build/tools/releasetools/ota_from_target_files
build/tools/releasetools/edify_generator.py



/************************
 系统启动过程更新recovery

 编译ota包时，会生成install-recovery.sh
*/ 
service flash_recovery /system/bin/install-recovery.sh
    class main
    oneshot
@system/core/rootdir/init.rc

//执行
if ! applypatch -c EMMC:/dev/block/platform/soc/soc.ap-ahb/c0c00000.sdio/by-name/recovery:18952192:cc405ec36e90acf31b38992337af7839afd3fcf3; then
  applypatch -b /system/etc/recovery-resource.dat EMMC:/dev/block/platform/soc/soc.ap-ahb/c0c00000.sdio/by-name/boot:13993984:19d0bcb278cd717b0aa00163f60ae439b746d04b EMMC:/dev/block/platform/soc/soc.ap-ahb/c0c00000.sdio/by-name/recovery cc405ec36e90acf31b38992337af7839afd3fcf3 18952192 19d0bcb278cd717b0aa00163f60ae439b746d04b:/system/recovery-from-boot.p && log -t recovery "Installing new recovery image: succeeded" || log -t recovery "Installing new recovery image: failed"



main@applypatch_main.cpp-->applypatch_modes{
- ShowLicenses //-l
  //先检测
- CheckMode{    //-c
	- applypatch_check(argv[2], sha1)
	}
  //修改recovery
- patchMode{
	- 
	}
}@applypatch_modes.cpp


bootable/recovery/applypatch/applypatch_main.cpp
bootable/recovery/applypatch/applypatch_modes.cpp
bootable/recovery/applypatch/applypatch.cpp

/***************
 lsec recovery
*/

sql_getupdate(&update_package){
- ensure_path_mounted("/system") 
- isHaveExternalStorageDevice{
	- isHaveExternalUsbStore
	- isHaveExternalSD
	}
- findFileAndMountDevice("/lsec6523update")
}



/*********************************
   上层接口
   获取display信息
*/
//通过resource获取分辨率
getResources-->mResource@ContextImpl.java-->getDisplayMetrics-->mResourcesImpl.getDisplayMetrics()@Resource.java

//通过display获取分辨率 android8.0
getWindowManager-->mWindowManager@Activity.java-->mWindowManager@Window.java-->WindowManagerImpl@WindowManagerImpl.java

getDefaultDisplay@WindowManagerImpl.java-->mContext.getDisplay()-->getDisplay-->mResourcesManager.getAdjustedDisplay
@ContextImpl.java-->getAdjustedDisplay@ResourceManager.java

//最终调用到getAdjustedDisplay
getAdjustedDisplay{
- DisplayManagerGlobal dm = DisplayManagerGlobal.getInstance(){
	  //只创建一个实例
	- IBinder b = ServiceManager.getService(Context.DISPLAY_SERVICE)
	- sInstance = new DisplayManagerGlobal(IDisplayManager.Stub.asInterface(b))
	}
- dm.getCompatibleDisplay(displayId, resources){
	- DisplayInfo displayInfo = getDisplayInfo(displayId){
		- info = mDm.getDisplayInfo(displayId) //从服务端获取displayInfo
		- registerCallbackIfNeededLocked	
		}
	- return new Display(this, displayId, displayInfo, daj)
	}@DisplayManangerGlobal.java
}@ResourceManager.java

//获取display android6.1
getWindowManager(dm.getDisplay)@ContextImpl.java-->getDisplay-->getOrCreateDisplayLocked
@DisplayManager.java-->getCompatibleDisplay{
- getDisplayInfo-->mDm.getDisplayInfo-->display.getDisplayInfoLocked@DisplayManagerService.java
- new Display(displayInfo)
}@DisplayManagerGlobal.java




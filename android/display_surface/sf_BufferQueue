/*
- 分配使用的buffer
- 所有的producer和cosumer的buffer都在这里分配
- 两条线：
	1,应用 surfaceControl--BufferQueue--Layer
	2,系统 framebufferSurface--BufferQueue--display

*/

//获取buffer
BufferQueue::dequeueBuffer{

}

//提交数据buffer
BufferQueue::queueBuffer{
- 解析参数input.deflate
- 获取对应graphicBuffer，创建BufferItem
- 加入mQueue{
	- 若可替换则替换队列最前的项目，*front = item;
	- mQueue.push_back(item)
	- 设置listener为mConsumerListener
	}

- listener->onFrameAvailable
- 装入返回参数output->inflate
}

/* producer

*/
BufferQueueProducer::queueBuffer{
- frameAvailableListener = mCore->mConsumerListener-->frameAvailableListener->onFrameAvailable
}



BufferQueueProducer::setSidebandStream@BufferQueueProducer.cpp-->
onSidebandStreamChanged@SurfaceFlingerConsumer.cpp-->onSidebandStreamChanged@Layer.cpp


frameworks/native/libs/gui/BufferQueueProducer.cpp


/* consumer

*/
SurfaceFlinger::init-->(创建BufferQueue，创建FramebufferSurface)
FramebufferSurface::FramebufferSurface(IGraphicBufferConsumer/*bufferQueue*/){
- 继承ConsumerBase::ConsumerBase{
	- listener = static_cast<ConsumerListener*>(this)
	- 创建listener，new BufferQueue::ProxyConsumerListener(listener)
	- 连接bufferQueue，mConsumer->consumerConnect-->(设置监听)consumerConnect@BufferQueue.cpp
	}
- 设置bufferQueue 
}


handleTransactionLocked-->onHotplugReceived-->createDefaultDisplayDevice{
- BufferQueue::createBufferQueue(&producer, &consumer)
- fbs = new FramebufferSurface(*mHwc, type, consumer)
- new DisplayDevice(fbs,producer)
}

//layer创建
onFirstRef{
- createBufferQueue(&producer, &consumer,true/*to surfaceflinger*/)
- mProducer = new MonitoredProducer(producer, mFlinger)
- mSurfaceFlingerConsumer = new SurfaceFlingerConsumer(consumer)
- mSurfaceFlingerConsumer.setFrameAvailableListener(this)
}@Layer.cpp


//consumer连接到bufferqueue
ConsumerBase(mConsumer)-->mConsumer->consumerConnect@ConsumerBase.cpp-->consumerConnect
-->connect-->(consumerListener)-->mCore->mConsumerListener = consumerListener
@BufferQueueConsumer.cpp
________________
ConsumerBase
|
GLConsumer   //GL_TEXTURE_EXTERNAL_OES 从bufferQueue中消耗数据
|
SurfaceFlingerConsumer@Layer.cpp //Layer使用



ConsumerBase
|
FramebufferSurface@SurfaceFlinger::createDefaultDisplayDevice


frameworks/native/libs/gui/ConsumerBase.cpp
frameworks/native/libs/gui/BufferQueue.cpp
frameworks/native/libs/gui/BufferQueueProducer.cpp
frameworks/native/libs/gui/BufferQueueConsumer.cpp


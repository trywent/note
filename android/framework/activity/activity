/***********************
 activity:生命周期 Created-----started(可见)-----Resumed-----Paused-----sopted-----destoryed
 
 Activity{//窗口
  ActivityThread --- IApplicationThread --- ActivityManagerService
  mToken  --- ActivitRecord.apptoken
  PhoneWindow --- decorView---ViewRootImpl --- ISession --- WindowManagerService 
 }

 ActivityRecord{//ActivityManagerService管理生命周期
	apptoken ---addApptoken--- WindowManagerService
	}

 ViewRootImpl{ //view布局,窗口变化
	session
	IWindow --- WindowManagerService
	}
 
*/





/*
 ActivtyRecord
*/

ActivityRecord(ActivityManagerService _service, Intent _intent){
- ActivityManagerService service = _service
- IApplicationToken.Stub appToken = new Token(this)
}@ActivityRecord.java



/*
 Activity
*/
activity.attach(appContext, this, getInstrumentation(), r.token....)@ActivityThread.java-->
attach(Context context, ActivityThread aThread,){
- mWindow = new PhoneWindow(this, window, activityConfigCallback) //创建窗口
- mWindow.setCallback(this)
- mWindow.setWindowManager(ontext.getSystemService(Context.WINDOW_SERVICE),mToken,appName)//创建当前窗口的windowManagerImpl.....
	-->setWindowManager{
	- mAppToken = appToken //设置token,,,源头ActivtyManager中activityRecord
	- mAppName = appName
	- wm.createLocalWindowManager(this/*parentWindow*/)-->new WindowManagerImpl(mContext, parentWindow)
	}@Window.java 
- mWindowManager = mWindow.getWindowManager()
}@Activity.java

//start


//finish
finishActivity@Activity.java-->finishActivity@ActivityManagerNative.java-->
finishActivity@ActivityManagerService.java-->requestFinishActivityLocked-->
finishActivityLocked{
- 设置activity为finishing，r.makeFinishing
- 当前应用是resumed需先暂停，startPausingLocked-->(应用端执行onPause后)activityPaused-->
	activityPausedLocked-->	completePauseLocked{
		- finishCurrentActivityLocked
		- mStackSupervisor.resumeTopActivitiesLocked
		}

- finishCurrentActivityLocked{
	- 设置r.state= FINISHING
	}
}@ActivityStack.java

===================
事件：
处理后退按键：
onBackPressed-->finish-->(没有父activity)ActivityManagerNative.getDefault().finishActivity
@Activity.java-->finishActivity-->mMainStack.requestFinishActivityLocked@ActivityManagerService.java
-->finishActivityLocked-->finishActivityLocked-->finishActivityLocked-->resumeTopActivityLocked
@ActivityStack.java


onBackPressed-->finish-->(有父activity)mParent.finishFromChild-->finish@Activity.java

finishActivityLocked-->r.makeFinishing@ActivityStack.java

activityIdleInternal-->stopActivityLocked-->sendMessageDelayed(STOP_TIMEOUT_MSG)-->mHandler.handleMessage(STOP_TIMEOUT_MSG)-->activityStoppedLocked

_________________________________
back按键结束activity：

moveTaskToBack-->ActivityManagerNative.getDefault().moveActivityTaskToBack@Activity.java
-->moveActivityTaskToBack-->mMainStack.moveTaskToBackLocked@ActivityManagerService.java
-->moveTaskToBackLocked@ActivityStack.java


finish-->ActivityManagerNative.getDefault().finishActivity@Activity.java-->
finishActivity-->mMainStack.requestFinishActivityLocked@ActivityManagerService.java
-->requestFinishActivityLocked-->finishActivityLocked-->finishActivityLocked-->
finishCurrentActivityLocked-->resumeTopActivityLocked(恢复top位置activity)@ActivityStack.java


frameworks/base/core/java/android/app/Activity.java


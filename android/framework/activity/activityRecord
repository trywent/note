/*
 activity
*/

enum ActivityState {
        INITIALIZING,
        RESUMED,
        PAUSING,
        PAUSED,
        STOPPING,
        STOPPED,
        FINISHING,
        DESTROYING,
        DESTROYED
    }

//INITIALIZING
ActivityRecord(ActivityManagerService _service, Intent _intent,ActivityInfo aInfo,....) {
- ActivityManagerService service = _service;
- IApplicationToken.Stub  appToken = new Token(this);
- info = aInfo;
- state = INITIALIZING;
}@ActivityRecord.java

createWindowContainer(){
- mWindowContainerController = new AppWindowContainerController(taskController, appToken...)
}@ActivityRecord.java

//设置可见
setVisibility(boolean visible){
- mWindowContainerController.setVisibility(visible, mDeferHidingClient)
}@ActivityRecord.java


onWindowsVisible{
- nowVisible = true
- if (idle || mStackSupervisor.isStoppingNoHistoryActivity()) {	//有其它activity等待当前activity可见
	- mStackSupervisor.mActivitiesWaitingForVisibleActivity.clear()
	- mStackSupervisor.scheduleIdleLocked(
  }else{
	- mStackSupervisor.processStoppingActivitiesLocked
  }
}ActivityRecord.java



//finishing:
makeFinishing{
- finishing = true
- 任务中的activity个数减1，task.numActivities--
- 若已经stoped，清除没有处理的操作
}



frameworks/base/services/core/java/com/android/server/am/ActivityRecord.java


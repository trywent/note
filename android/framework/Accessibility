/*
 无障碍

 dumpsys accessibility
*/
AccessibilityManagerService{
- mMainHandler = new MainHandler(mContext.getMainLooper()
- registerBroadcastReceivers{
	  //监听应用状态
	- PackageMonitor monitor = new PackageMonitor() {
		- onSomePackagesChanged() {
			- readConfigurationForUserStateLocked			
			}
		- onPackageUpdateFinished(String packageName, int uid)
		- onPackageRemoved(String packageName, int uid)
		- onHandleForceStop(Intent intent, String[] packages)
		}
	  //监听user状态
	- IntentFilter intentFilter = new IntentFilter();
        - intentFilter.addAction(Intent.ACTION_USER_SWITCHED);
        - intentFilter.addAction(Intent.ACTION_USER_UNLOCKED);
        - intentFilter.addAction(Intent.ACTION_USER_REMOVED);
        - intentFilter.addAction(Intent.ACTION_USER_PRESENT)
	- mContext.registerReceiverAsUser(new BroadcastReceiver() {
		- onReceive{
			- ACTION_USER_PRESENT:readConfigurationForUserStateLocked
			}
		},IntentFilter)
	}
- new AccessibilityContentObserver(mMainHandler).register() 
}@AccessibilityManagerService.java


//systemui发送USER_PRESENT
onBootCompleted-->sendUserPresentBroadcast-->mContext.sendBroadcastAsUser(USER_PRESENT_INTENT)@KeyguardViewMediator.java

binderDied-->onUserStateChangedLocked-->updateServicesLocked-->manageServicesLocked


readConfigurationForUserStateLocked(UserState userState){
  //读取已安装的accessibility服务
- readInstalledAccessibilityServiceLocked(UserState userState){
	- 
	}
- readEnabledAccessibilityServicesLocked(UserState userState)
}@AccessibilityManagerService.java

//client监听状态
addClient(IAccessibilityManagerClient client, int userId) {
- final int resolvedUserId = mSecurityPolicy.resolveCallingUserIdEnforcingPermissionsLocked(userId)
- UserState userState = getUserStateLocked(resolvedUserId)  
- if (mSecurityPolicy.isCallerInteractingAcrossUsers(userId)) {//系统用户  
	- mGlobalClients.register(client)
	- return IntPair.of(userState.getClientState(), userState.mLastSentRelevantEventTypes)
  }else{//普通用户
	- userState.mUserClients.register(client)
	- return IntPair.of( userState.getClientState(), userState.mLastSentRelevantEventTypes)
  }
}@AccessibilityManagerService.java


/*
 Manager 
*/
AccessibilityManager(Context context, IAccessibilityManager service, int userId){
- mCallback = new MyCallback()
- mHandler = new Handler(context.getMainLooper(), mCallback)
- tryConnectToServiceLocked(service){
	  //获取服务
	- if (service == null) {
		- IBinder iBinder = ServiceManager.getService(Context.ACCESSIBILITY_SERVICE)
		- service = IAccessibilityManager.Stub.asInterface(iBinder)
		}
	  //当前状态
	- final long userStateAndRelevantEvents = service.addClient(mClient, mUserId)
	- setStateLocked(IntPair.first(userStateAndRelevantEvents))
	}
}@AccessibilityManager.java
//触摸高亮
isTouchExplorationEnabled{
- 
}


frameworks/base/services/accessibility/java/com/android/server/accessibility/AccessibilityManagerService.java
frameworks/base/packages/SystemUI/src/com/android/systemui/keyguard/KeyguardViewMediator.java
frameworks/base/core/java/android/view/accessibility/AccessibilityManager.java

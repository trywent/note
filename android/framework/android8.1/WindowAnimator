/**********************
 WindowAnimator
 所有动画从这里执行

*/

WindowManagerService-->WindowAnimator mAnimator = new WindowAnimator(this)-->
WindowAnimator(WindowManagerService service){
- mService = service
  //新建线程ServiceThread,执行run(阻塞等待直到返回).设置mChoreographer
- AnimationThread.getHandler().runWithScissors(() -> mChoreographer = Choreographer.getSfInstance())
- mAnimationFrameCallback = frameTimeNs -> {
            animate(frameTimeNs);
        }
}@WindowAnimator.java

//旋转动画
ScreenRotationAnimation getScreenRotationAnimationLocked-->
getDisplayContentsAnimatorLocked(int displayId){
- DisplayContentsAnimator displayAnimator = mDisplayContentsAnimators.get(displayId)
- displayAnimator == null{
	- displayAnimator = new DisplayContentsAnimator()
	- mDisplayContentsAnimators.put(displayId, displayAnimator)
	}
}@WindowAnimator.java

setScreenRotationAnimationLocked(ScreenRotationAnimation animation){
- DisplayContentsAnimator animator = getDisplayContentsAnimatorLocked(displayId)
- animator.mScreenRotationAnimation = animation
}

//设置动画
由app的窗口设置动画

//执行动画。vsync驱动
scheduleAnimationLocked@WindowManagerService.java-->scheduleAnimation-->
mChoreographer.postFrameCallback(mAnimationFrameCallback)-->mAnimationFrameCallback
animate(frameTimeNs){
- scheduleAnimation
- 
- mService.openSurfaceTransaction()
  //遍历所有display。执行所有display上的动画
- int displayId = mDisplayContentsAnimators.keyAt(i)
- DisplayContent dc = mService.mRoot.getDisplayContentOrCreate(displayId)
  	//执行app动画
- dc.stepAppWindowsAnimation(mCurrentTime)-->stepAppWindowsAnimation{
	- WindowContainer wc = mChildren.get(i)	//遍历所有child
	- wc.stepAppWindowsAnimation		//最后只有appToken中有app动画
	}@WindowContainer.java
  	//旋转动画
- ScreenRotationAnimation screenRotationAnimation = displayAnimator.mScreenRotationAnimation
- screenRotationAnimation.stepAnimationLocked
  	//遍历所有窗口，执行WindowStateAnimator动画
- dc.updateWindowsForAnimator-->forAllWindows(mUpdateWindowsForAnimator)@DisplayContent.java
- dc.updateWallpaperForAnimator
  	//遍历所有窗口，将动画结果作用到窗口
- dc.prepareWindowSurfaces-->forAllWindows(mPrepareWindowSurfaces, false)@DisplayContent.java
  //遍历所有dispaly。更新旋转，辅助访问，分屏条等窗口
- DisplayContent dc = mService.mRoot.getDisplayContentOrCreate(displayId)
- dc.checkAppWindowsReadyToShow()
- screenRotationAnimation.updateSurfacesInTransaction()
- orAnimating(dc.getDockedDividerController().animate(mCurrentTime))
- mService.mDragState.stepAnimationLocked(mCurrentTime)
- mService.closeSurfaceTransaction()
  //是否执行布局
- boolean hasPendingLayoutChanges = mService.mRoot.hasPendingLayoutChanges(this)
- doRequest = mService.mRoot.copyAnimToLayoutParams(
- mWindowPlacerLocked.requestTraversal()
}@WindowAnimator.java



frameworks/base/services/core/java/com/android/server/wm/WindowAnimator.java
frameworks/base/services/core/java/com/android/server/AnimationThread.java
frameworks/base/services/core/java/com/android/server/wm/ScreenRotationAnimation.java
frameworks/base/services/core/java/com/android/server/wm/DisplayContent.java
frameworks/base/services/core/java/com/android/server/wm/WindowStateAnimator.java
/**********************
 stack animation
*/
BoundsAnimator.onAnimationEnd@BoundsAnimationController.java-->
onAnimationEnd-->mService.mActivityManager.moveTasksToFullscreenStack@TaskStack.java
-->moveTasksToFullscreenStack@ActivityManagerService.java

animateResizePinnedStack-->getWindowContainerController().animateResizePinnedStack@PinnedActivityStack.java
animateResizePinnedStack-->mService.mBoundsAnimationController.getHandler().post-->
mService.mBoundsAnimationController.animateBounds@PinnedStackWindowController.java




animateBounds-->animateBoundsImpl{
- BoundsAnimator animator = new BoundsAnimator(target, from, to)
- mRunningAnimations.put(target, animator)
 //设置并开始
- animator.setFloatValues(
- animator.setDuration
- animator.setInterpolator(mFastOutSlowInInterpolator)
- animator.start()
}@BoundsAnimationController.java


animateBoundsImpl-->BoundsAnimator.onAnimationStart@BoundsAnimationController.java
-->setPinnedStackSize@TaskStack.java


frameworks/base/services/core/java/com/android/server/am/PinnedActivityStack.java
frameworks/base/services/core/java/com/android/server/wm/PinnedStackWindowController.java
frameworks/base/services/core/java/com/android/server/wm/BoundsAnimationController.java
frameworks/base/services/core/java/com/android/server/wm/TaskStack.java


updateDrawnWindowStates@AppWindowToken.java



frameworks/base/services/core/java/com/android/server/wm/AppWindowToken.java

//bluetooth manager

btu_message_loop_run@btu_task.c-->btif_init_ok-->BTA_EnableBluetooth(bte_dm_evt)@btif_core-->
BTA_EnableBluetooth(tBTA_DM_SEC_CBACK* p_cback) {
- bta_sys_register(BTA_ID_DM, &bta_dm_reg)
- bta_sys_register(BTA_ID_DM_SEARCH, &bta_dm_search_reg)
- bta_sys_eir_register(bta_dm_eir_update_uuid)
  //打开,设置事件回调处理bte_dm_evt
- p_msg->hdr.event = BTA_DM_API_ENABLE_EVT
- p_msg->p_sec_cback = p_cback
- bta_sys_sendmsg(p_msg)
}@bta_dm_api.cc

//search
BTM_StartInquiry







bt/bta/dm/bta_dm_api.cc
bt/bta/dm/bta_dm_main.cc

===================
//btm security

l2c_link_timeout@l2c_link.c


btm_sec_disconnect-->btm_sec_send_hci_disconnect@btm_sec.c


stack/btm/btm_sec.c



/**************************
 pm

*/


//设置设备模式
bta_dm_pm_set_mode-->bta_dm_pm_sniff@bta_dm_pm.c-->BTM_SetPowerMode-->
btm_pm_snd_md_req(UINT8 pm_id, int link_ind, tBTM_PM_PWR_MD *p_mode){
- mode = btm_pm_get_set_mode(pm_id, p_cb, p_mode, &md_res)
- md_res.mode = mode
- switch(md_res.mode)
- BTM_PM_MD_ACTIVE{
	- 
	}
- BTM_PM_MD_HOLD{}
- BTM_PM_MD_SNIFF{
	- btsnd_hcic_sniff_mode
	}
- BTM_PM_MD_PARK
}@btm_pm.c

//超时
bta_dm_pm_set_mode-->bta_dm_pm_start_timer-->bta_dm_pm_timer_cback@bta_dm_pm.c-->
bta_sys_sendmsg(BTA_DM_PM_TIMER_EVT)-->bta_dm_action.bta_dm_pm_timer@bta_dm_main.c
-->bta_dm_pm_timer@bta_dm_pm.c

bt/bta/dm/bta_dm_pm.c
bt/stack/btm/btm_pm.c

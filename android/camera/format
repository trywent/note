//
YUV格式有两大类：planar和packed。
对于planar的YUV格式，先连续存储所有像素点的Y，紧接着存储所有像素点的U，随后是所有像素点的V。
对于packed的YUV格式，每个像素点的Y,U,V是连续交替存储的
YUV 4:4:4采样，每一个Y对应一组UV分量。 
YUV 4:2:2采样，每两个Y共用一组UV分量。 
YUV 4:2:0采样，每四个Y共用一组UV分量。 

存储方式:
1. YUVY 格式 （属于YUV422）
2. UYVY 格式 （属于YUV422)
3. YUV422P（属于YUV422）
4. YV12，YU12格式（属于YUV420）
5. NV12、NV21（属于YUV420)

packed:
YVYU: YVYUYVYUYVYU     =>YUV422

planar:
//I420和YV12都是3-plane，YUV数据段分了三段Y-U-V
I420: YYYYYYYY UU VV   =>YUV420P
YV12: YYYYYYYY VV UU   =>YUV420P
//NV12和NV21则是2-plane，YUV数据段只分两段Y-UV或是Y-VU
NV12: YYYYYYYY UVUV    =>YUV420SP
NV21: YYYYYYYY VUVU    =>YUV420SP


//
常见输出格式有：
    RGB4 —— 16色，每个像素用4位表示，需要调色板
    RGB8 —— 256色，每个像素用8位表示，需要调色板
    RGB565 —— 每个像素用16位表示，RGB分量分别使用5位、6位、5位
    RGB555 —— 每个像素用16位表示，RGB分量都使用5位（剩下的1位不用）
    RGB24 —— 每个像素用24位表示，RGB分量各使用8位
    RGB32 —— 每个像素用32位表示，RGB分量各使用8位（剩下的8位不用）
    ARGB32 —— 每个像素用32位表示，RGB分量各使用8位（剩下的8位用于表示Alpha通道值）
    YUY2 —— YUY2格式，以4:2:2方式打包
    YUYV —— YUYV格式（实际格式与YUY2相同）
    YVYU —— YVYU格式，以4:2:2方式打包
    UYVY —— UYVY格式，以4:2:2方式打包
    AYUV —— 带Alpha通道的4:4:4 YUV格式
    Y41P —— Y41P格式，以4:1:1方式打包
    Y411 —— Y411格式（实际格式与Y41P相同）
    Y211 —— Y211格式
    IF09 —— IF09格式
    IYUV —— IYUV格式
    YV12 —— YV12格式
    YVU9 —— YVU9格式

YVYU, UYVY格式跟YUY2類似，只是排列順序有所不同。


网上很多YUV转RGB，其实都是YUV444,而不是YUV420, 420处理时，还细分是NV12还是NV21或是YV12等格式，必须把UV映射弄清楚。
不同的转换矩阵转出来效果也不同，不同的转换矩阵往往对应的输入源数据也不同。

{
DEPTH16 //每个像素16bits(索引表颜色),最高3bits为数据有效性.1--0代表0/7--7/7
DEPTH_POINT_CLOUD //立体像素4个浮点数,X, Y, Z 和有效性
FLEX_RGBA_8888  //RGBA每个像素32
FLEX_RGB_888
JPEG            //压缩的JPEG.相机的输出格式
NV16            //YCbCr视屏使用.建议改用YUV_420_888 
NV21            //YCbCr相机默认预览格式.建议改用YUV_420_888 
PRIVATE         //
RAW10           //每个像素10bits,一般是拜耳数据..存储格式特殊
RAW12           //每个像素12bits.
RAW_PRIVATE
RAW_SENSOR
RGB_565
UNKNOWN
YUV_420_888     //YUV
YUV_422_888
YUV_444_888
YUY2
YV12
}@android/graphics/ImageFormat
